import requests

headers = {
    'accept': '*/*',
    'accept-language': 'en-US,en;q=0.9',
    'cache-control': 'no-cache',
    'content-type': 'application/json',
    'kw-skypicker-visitor-uniqid': '81eb3a3b-5cdb-4810-b708-ae16d5f7cb0f',
    'kw-umbrella-token': 'c22a865e080f4e1bca60ec344bef3a6d0f7f2975c805107b4d75eb29003caeed',
    'origin': 'https://www.kiwi.com',
    'pragma': 'no-cache',
    'priority': 'u=1, i',
    'referer': 'https://www.kiwi.com/',
    'sec-ch-ua': '"Chromium";v="128", "Not;A=Brand";v="24", "Google Chrome";v="128"',
    'sec-ch-ua-mobile': '?0',
    'sec-ch-ua-platform': '"Windows"',
    'sec-fetch-dest': 'empty',
    'sec-fetch-mode': 'cors',
    'sec-fetch-site': 'cross-site',
    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/128.0.0.0 Safari/537.36',
}

params = {
    'featureName': 'SearchOneWayItinerariesQuery',
}

json_data = {
    'query': 'query SearchOneWayItinerariesQuery(\n  $search: SearchOnewayInput\n  $filter: ItinerariesFilterInput\n  $options: ItinerariesOptionsInput\n) {\n  onewayItineraries(search: $search, filter: $filter, options: $options) {\n    __typename\n    ... on AppError {\n      error: message\n    }\n    ... on Itineraries {\n      server {\n        requestId\n        environment\n        packageVersion\n        serverToken\n      }\n      metadata {\n        eligibilityInformation {\n          baggageEligibilityInformation {\n            topFiveResultsBaggageEligibleForPrompt\n            numberOfBags\n          }\n          guaranteeAndRedirectsEligibilityInformation {\n            redirect {\n              anywhere\n              top10\n              isKiwiAvailable\n            }\n            guarantee {\n              anywhere\n              top10\n            }\n            combination {\n              anywhere\n              top10\n            }\n          }\n          topThreeResortingOccurred\n          carriersDeeplinkEligibility\n          responseContainsKayakItinerary\n        }\n        carriers {\n          code\n          id\n        }\n        ...AirlinesFilter_data\n        ...CountriesFilter_data\n        ...WeekDaysFilter_data\n        ...TravelTip_data\n        ...Sorting_data\n        ...useSortingModes_data\n        ...PriceAlert_data\n        itinerariesCount\n        hasMorePending\n        missingProviders {\n          code\n        }\n        searchFingerprint\n        statusPerProvider {\n          provider {\n            id\n          }\n          errorHappened\n          errorMessage\n        }\n        hasTier1MarketItineraries\n        isSortOrderSameAsDefault\n        sharedItinerary {\n          __typename\n          ...TripInfo\n          ... on ItineraryOneWay {\n            ... on Itinerary {\n              __isItinerary: __typename\n              __typename\n              id\n              shareId\n              price {\n                amount\n                priceBeforeDiscount\n              }\n              priceEur {\n                amount\n              }\n              provider {\n                name\n                code\n                hasHighProbabilityOfPriceChange\n                contentProvider {\n                  code\n                }\n                id\n              }\n              bagsInfo {\n                includedCheckedBags\n                includedHandBags\n                hasNoBaggageSupported\n                hasNoCheckedBaggage\n                checkedBagTiers {\n                  tierPrice {\n                    amount\n                  }\n                  bags {\n                    weight {\n                      value\n                    }\n                  }\n                }\n                handBagTiers {\n                  tierPrice {\n                    amount\n                  }\n                  bags {\n                    weight {\n                      value\n                    }\n                  }\n                }\n                includedPersonalItem\n                personalItemTiers {\n                  tierPrice {\n                    amount\n                  }\n                  bags {\n                    weight {\n                      value\n                    }\n                    height {\n                      value\n                    }\n                    width {\n                      value\n                    }\n                    length {\n                      value\n                    }\n                  }\n                }\n              }\n              bookingOptions {\n                edges {\n                  node {\n                    token\n                    bookingUrl\n                    trackingPixel\n                    itineraryProvider {\n                      code\n                      name\n                      subprovider\n                      hasHighProbabilityOfPriceChange\n                      contentProvider {\n                        code\n                      }\n                      providerCategory\n                      id\n                    }\n                    price {\n                      amount\n                    }\n                    priceEur {\n                      amount\n                    }\n                  }\n                }\n              }\n              travelHack {\n                isTrueHiddenCity\n                isVirtualInterlining\n                isThrowawayTicket\n              }\n              priceLocks {\n                priceLocksCurr {\n                  default\n                  price {\n                    amount\n                    roundedFormattedValue\n                  }\n                }\n                priceLocksEur {\n                  default\n                  price {\n                    amount\n                    roundedFormattedValue\n                  }\n                }\n              }\n            }\n            legacyId\n            sector {\n              id\n              sectorSegments {\n                guarantee\n                segment {\n                  id\n                  source {\n                    localTime\n                    utcTime\n                    station {\n                      id\n                      legacyId\n                      name\n                      code\n                      type\n                      gps {\n                        lat\n                        lng\n                      }\n                      city {\n                        legacyId\n                        name\n                        id\n                      }\n                      country {\n                        code\n                        id\n                      }\n                    }\n                  }\n                  destination {\n                    localTime\n                    utcTime\n                    station {\n                      id\n                      legacyId\n                      name\n                      code\n                      type\n                      gps {\n                        lat\n                        lng\n                      }\n                      city {\n                        legacyId\n                        name\n                        id\n                      }\n                      country {\n                        code\n                        id\n                      }\n                    }\n                  }\n                  duration\n                  type\n                  code\n                  carrier {\n                    id\n                    name\n                    code\n                  }\n                  operatingCarrier {\n                    id\n                    name\n                    code\n                  }\n                  cabinClass\n                  hiddenDestination {\n                    code\n                    name\n                    city {\n                      name\n                      id\n                    }\n                    country {\n                      name\n                      id\n                    }\n                    id\n                  }\n                  throwawayDestination {\n                    id\n                  }\n                }\n                layover {\n                  duration\n                  isBaggageRecheck\n                  isWalkingDistance\n                  transferDuration\n                  id\n                }\n              }\n              duration\n            }\n            lastAvailable {\n              seatsLeft\n            }\n            isRyanair\n            benefitsData {\n              automaticCheckinAvailable\n              instantChatSupportAvailable\n              disruptionProtectionAvailable\n              guaranteeAvailable\n              guaranteeFee {\n                roundedAmount\n              }\n              searchReferencePrice {\n                roundedFormattedValue\n              }\n            }\n          }\n          id\n        }\n        kayakEligibilityTest {\n          containsKayakWithNewRules\n          containsKayakWithCurrentRules\n          containsKayakAirlinesWithNewRules\n        }\n        extendedTrackingMetadata {\n          fullResponse {\n            allItineraries {\n              numberOfKiwiOnlyBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfKayakOnlyBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfDeeplinkOnlyBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfKiwiAndKayakBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfKiwiAndDeeplinkBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n            }\n            filteredItineraries {\n              numberOfKiwiOnlyBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfKayakOnlyBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfDeeplinkOnlyBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfKiwiAndKayakBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfKiwiAndDeeplinkBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n            }\n            airlineBreakdown {\n              carriers {\n                code\n                id\n              }\n              allItineraries {\n                numberOfKiwiOnlyBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfKayakOnlyBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfDeeplinkOnlyBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfKiwiAndKayakBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfKiwiAndDeeplinkBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n              }\n              filteredItineraries {\n                numberOfKiwiOnlyBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfKayakOnlyBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfDeeplinkOnlyBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfKiwiAndKayakBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfKiwiAndDeeplinkBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n              }\n            }\n          }\n          topTenInResponse {\n            allItineraries {\n              numberOfKiwiOnlyBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfKayakOnlyBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfDeeplinkOnlyBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfKiwiAndKayakBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfKiwiAndDeeplinkBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n            }\n            filteredItineraries {\n              numberOfKiwiOnlyBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfKayakOnlyBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfDeeplinkOnlyBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfKiwiAndKayakBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n              numberOfKiwiAndDeeplinkBookingOptionItineraries {\n                beforeMerging\n                afterMerging\n              }\n            }\n            airlineBreakdown {\n              carriers {\n                name\n                code\n                id\n              }\n              allItineraries {\n                numberOfKiwiOnlyBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfKayakOnlyBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfDeeplinkOnlyBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfKiwiAndKayakBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfKiwiAndDeeplinkBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n              }\n              filteredItineraries {\n                numberOfKiwiOnlyBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfKayakOnlyBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfDeeplinkOnlyBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfKiwiAndKayakBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n                numberOfKiwiAndDeeplinkBookingOptionItineraries {\n                  beforeMerging\n                  afterMerging\n                }\n              }\n            }\n          }\n        }\n      }\n      itineraries {\n        __typename\n        ...TripInfo\n        ... on ItineraryOneWay {\n          ... on Itinerary {\n            __isItinerary: __typename\n            __typename\n            id\n            shareId\n            price {\n              amount\n              priceBeforeDiscount\n            }\n            priceEur {\n              amount\n            }\n            provider {\n              name\n              code\n              hasHighProbabilityOfPriceChange\n              contentProvider {\n                code\n              }\n              id\n            }\n            bagsInfo {\n              includedCheckedBags\n              includedHandBags\n              hasNoBaggageSupported\n              hasNoCheckedBaggage\n              checkedBagTiers {\n                tierPrice {\n                  amount\n                }\n                bags {\n                  weight {\n                    value\n                  }\n                }\n              }\n              handBagTiers {\n                tierPrice {\n                  amount\n                }\n                bags {\n                  weight {\n                    value\n                  }\n                }\n              }\n              includedPersonalItem\n              personalItemTiers {\n                tierPrice {\n                  amount\n                }\n                bags {\n                  weight {\n                    value\n                  }\n                  height {\n                    value\n                  }\n                  width {\n                    value\n                  }\n                  length {\n                    value\n                  }\n                }\n              }\n            }\n            bookingOptions {\n              edges {\n                node {\n                  token\n                  bookingUrl\n                  trackingPixel\n                  itineraryProvider {\n                    code\n                    name\n                    subprovider\n                    hasHighProbabilityOfPriceChange\n                    contentProvider {\n                      code\n                    }\n                    providerCategory\n                    id\n                  }\n                  price {\n                    amount\n                  }\n                  priceEur {\n                    amount\n                  }\n                }\n              }\n            }\n            travelHack {\n              isTrueHiddenCity\n              isVirtualInterlining\n              isThrowawayTicket\n            }\n            priceLocks {\n              priceLocksCurr {\n                default\n                price {\n                  amount\n                  roundedFormattedValue\n                }\n              }\n              priceLocksEur {\n                default\n                price {\n                  amount\n                  roundedFormattedValue\n                }\n              }\n            }\n          }\n          legacyId\n          sector {\n            id\n            sectorSegments {\n              guarantee\n              segment {\n                id\n                source {\n                  localTime\n                  utcTime\n                  station {\n                    id\n                    legacyId\n                    name\n                    code\n                    type\n                    gps {\n                      lat\n                      lng\n                    }\n                    city {\n                      legacyId\n                      name\n                      id\n                    }\n                    country {\n                      code\n                      id\n                    }\n                  }\n                }\n                destination {\n                  localTime\n                  utcTime\n                  station {\n                    id\n                    legacyId\n                    name\n                    code\n                    type\n                    gps {\n                      lat\n                      lng\n                    }\n                    city {\n                      legacyId\n                      name\n                      id\n                    }\n                    country {\n                      code\n                      id\n                    }\n                  }\n                }\n                duration\n                type\n                code\n                carrier {\n                  id\n                  name\n                  code\n                }\n                operatingCarrier {\n                  id\n                  name\n                  code\n                }\n                cabinClass\n                hiddenDestination {\n                  code\n                  name\n                  city {\n                    name\n                    id\n                  }\n                  country {\n                    name\n                    id\n                  }\n                  id\n                }\n                throwawayDestination {\n                  id\n                }\n              }\n              layover {\n                duration\n                isBaggageRecheck\n                isWalkingDistance\n                transferDuration\n                id\n              }\n            }\n            duration\n          }\n          lastAvailable {\n            seatsLeft\n          }\n          isRyanair\n          benefitsData {\n            automaticCheckinAvailable\n            instantChatSupportAvailable\n            disruptionProtectionAvailable\n            guaranteeAvailable\n            guaranteeFee {\n              roundedAmount\n            }\n            searchReferencePrice {\n              roundedFormattedValue\n            }\n          }\n        }\n        id\n      }\n    }\n  }\n}\n\nfragment AirlinesFilter_data on ItinerariesMetadata {\n  carriers {\n    id\n    code\n    name\n  }\n}\n\nfragment CountriesFilter_data on ItinerariesMetadata {\n  stopoverCountries {\n    code\n    name\n    id\n  }\n}\n\nfragment PrebookingStation on Station {\n  code\n  type\n  city {\n    name\n    id\n  }\n}\n\nfragment PriceAlert_data on ItinerariesMetadata {\n  priceAlertExists\n  existingPriceAlert {\n    id\n  }\n  searchFingerprint\n  hasMorePending\n  priceAlertsTopResults {\n    best {\n      price {\n        amount\n      }\n    }\n    cheapest {\n      price {\n        amount\n      }\n    }\n    fastest {\n      price {\n        amount\n      }\n    }\n    sourceTakeoffAsc {\n      price {\n        amount\n      }\n    }\n    destinationLandingAsc {\n      price {\n        amount\n      }\n    }\n  }\n}\n\nfragment Sorting_data on ItinerariesMetadata {\n  topResults {\n    best {\n      __typename\n      duration\n      price {\n        amount\n      }\n      id\n    }\n    cheapest {\n      __typename\n      duration\n      price {\n        amount\n      }\n      id\n    }\n    fastest {\n      __typename\n      duration\n      price {\n        amount\n      }\n      id\n    }\n    sourceTakeoffAsc {\n      __typename\n      duration\n      price {\n        amount\n      }\n      id\n    }\n    destinationLandingAsc {\n      __typename\n      duration\n      price {\n        amount\n      }\n      id\n    }\n  }\n}\n\nfragment TravelTip_data on ItinerariesMetadata {\n  travelTips {\n    __typename\n    ... on TravelTipRadiusMoney {\n      radius\n      params {\n        name\n        value\n      }\n      savingMoney: saving {\n        amount\n        currency {\n          id\n          code\n          name\n        }\n        formattedValue\n      }\n      location {\n        __typename\n        id\n        legacyId\n        name\n        slug\n      }\n    }\n    ... on TravelTipRadiusTime {\n      radius\n      params {\n        name\n        value\n      }\n      saving\n      location {\n        __typename\n        id\n        legacyId\n        name\n        slug\n      }\n    }\n    ... on TravelTipRadiusSome {\n      radius\n      params {\n        name\n        value\n      }\n      location {\n        __typename\n        id\n        legacyId\n        name\n        slug\n      }\n    }\n    ... on TravelTipDateMoney {\n      dates {\n        start\n        end\n      }\n      params {\n        name\n        value\n      }\n      savingMoney: saving {\n        amount\n        currency {\n          id\n          code\n          name\n        }\n        formattedValue\n      }\n    }\n    ... on TravelTipDateTime {\n      dates {\n        start\n        end\n      }\n      params {\n        name\n        value\n      }\n      saving\n    }\n    ... on TravelTipDateSome {\n      dates {\n        start\n        end\n      }\n      params {\n        name\n        value\n      }\n    }\n    ... on TravelTipExtend {\n      destination {\n        __typename\n        id\n        name\n        slug\n      }\n      locations {\n        __typename\n        id\n        name\n        slug\n      }\n      price {\n        amount\n        currency {\n          id\n          code\n          name\n        }\n        formattedValue\n      }\n    }\n  }\n}\n\nfragment TripInfo on Itinerary {\n  __isItinerary: __typename\n  ... on ItineraryOneWay {\n    sector {\n      sectorSegments {\n        segment {\n          source {\n            station {\n              ...PrebookingStation\n              id\n            }\n            localTime\n          }\n          destination {\n            station {\n              ...PrebookingStation\n              id\n            }\n          }\n          id\n        }\n      }\n      id\n    }\n  }\n  ... on ItineraryReturn {\n    outbound {\n      sectorSegments {\n        segment {\n          source {\n            station {\n              ...PrebookingStation\n              id\n            }\n            localTime\n          }\n          destination {\n            station {\n              ...PrebookingStation\n              id\n            }\n          }\n          id\n        }\n      }\n      id\n    }\n    inbound {\n      sectorSegments {\n        segment {\n          destination {\n            station {\n              ...PrebookingStation\n              id\n            }\n            localTime\n          }\n          id\n        }\n      }\n      id\n    }\n  }\n  ... on ItineraryMulticity {\n    sectors {\n      sectorSegments {\n        segment {\n          source {\n            station {\n              ...PrebookingStation\n              id\n            }\n            localTime\n          }\n          destination {\n            station {\n              ...PrebookingStation\n              id\n            }\n            localTime\n          }\n          id\n        }\n      }\n      id\n    }\n  }\n}\n\nfragment WeekDaysFilter_data on ItinerariesMetadata {\n  inboundDays\n  outboundDays\n}\n\nfragment useSortingModes_data on ItinerariesMetadata {\n  topResults {\n    best {\n      __typename\n      duration\n      price {\n        amount\n      }\n      id\n    }\n    cheapest {\n      __typename\n      duration\n      price {\n        amount\n      }\n      id\n    }\n    fastest {\n      __typename\n      duration\n      price {\n        amount\n      }\n      id\n    }\n    sourceTakeoffAsc {\n      __typename\n      duration\n      price {\n        amount\n      }\n      id\n    }\n    destinationLandingAsc {\n      __typename\n      duration\n      price {\n        amount\n      }\n      id\n    }\n  }\n}\n',
    'variables': {
        'search': {
            'itinerary': {
                'source': {
                    'ids': [
                        'Station:airport:WAW',
                    ],
                },
                'destination': {
                    'ids': [
                        'City:rome_it',
                    ],
                },
                'outboundDepartureDate': {
                    'start': '2024-09-01T00:00:00',
                    'end': '2024-09-10T23:59:59',
                },
            },
            'passengers': {
                'adults': 1,
                'children': 0,
                'infants': 0,
                'adultsHoldBags': [
                    0,
                ],
                'adultsHandBags': [
                    0,
                ],
                'childrenHoldBags': [],
                'childrenHandBags': [],
            },
            'cabinClass': {
                'cabinClass': 'ECONOMY',
                'applyMixedClasses': False,
            },
        },
        'filter': {
            'allowChangeInboundDestination': True,
            'allowChangeInboundSource': True,
            'allowDifferentStationConnection': True,
            'enableSelfTransfer': True,
            'enableThrowAwayTicketing': True,
            'enableTrueHiddenCity': True,
            'maxStopsCount': 0,
            'transportTypes': [
                'FLIGHT',
            ],
            'contentProviders': [
                'KIWI',
                'KAYAK',
                'FRESH',
            ],
            'flightsApiLimit': 25,
            'limit': 10,
        },
        'options': {
            'sortBy': 'PRICE',
            'mergePriceDiffRule': 'INCREASED',
            'currency': 'uah',
            'apiUrl': None,
            'locale': 'uk',
            'market': 'ua',
            'partner': 'skypicker',
            'partnerMarket': 'uk',
            'affilID': 'skypicker',
            'storeSearch': False,
            'searchStrategy': 'REDUCED',
            'abTestInput': {
                'kiwiGuaranteeABTest': 'ENABLE',
                'kiwiGuaranteeEsABTest': 'ENABLE',
                'carriersDeeplinkResultsEnable': True,
                'carriersDeeplinkOnSEMEnable': True,
            },
            'serverToken': 'eyJ0b2tlbiI6ICJ1UlpRR0l5dko2U2JJWXZrdWdsNUJfTHlRTWdjX0NXcURLeW9lZGNQSUx3TEU3ZFlBOHp4OFpRYVBwLV9EZ2l6aGV6T3VUVG5GUUktRHh1XzV2QVJfdWVQcEhrMy03cjk0cUJkRDlCbmN6c3RncXFHdHVwbkgzVVpEWktLbHFTMDBYYUhlc2doWndFbm5ydE9aLWw5aFpVZldqaWVoemcwM2JobFpIazMtRHVzS05VWVpZOGZpZFpLZ05yY3ZKc0pWcUtYRk5JaUlsYVNLLTY5V21UZE9NYTcyQm9rSnhOb0hFRm5nSHU3QUlQM21xNVpjTzF5WklLemZ5d2l3NWh1dFp3V2FPNlRybjFJREQydlVhTDAwX1E3NWtwOTlLRzlZdUc4SENOZ0ZhbkVtZWJBZlZRZjFXVEJYb1ZMdmRaSGt1b1JMbW82dUlIQXlEcDhCbkFFMHA5c2JNRktPdy1OcEtwUmFXQ1d1eHNaMWZRcGM2VUF1NklxdjRnaGczdkczWWVwR0JiT1pxaEZqbFNyVjBuZTA5ekVTdDVXTlhfT2E2cmNCdWk4VU1VTTVlQl9RRzh5Z3YyRkZMUEU4X2RYUzlsbXRFN1dyN3RGUV9xYWpmSDctaGtpMHpJZWM5LUFLWWtwcGtPaHRJSUxRVVJQTFRuc0FtcjYwYjFCU3VNeXdQbmpjQ3B4UXNzYkxZTDRrdjYwN1EtaUhfNWxUbC1jMENXWEk4aDY0bWtzWGM1WlQtSzZOZGNOM1NmazMwd0siLCAidGltZXMiOiB7IjEiOiAxNzI1MjE1ODA4Ljk1NCwgIjIiOiAxNzI1MjE1NjE5LjY5OSwgIjgiOiAxNzI1MjE1ODA3LjM2NiwgIlJQIjogMTcyNTIxNTgwOC43MjF9fQ==',
        },
    },
}

# If there's a pagination mechanism, initialize variables for looping
# all_results = []
# page = 1
# has_more = True
#
# while has_more:
#     response = requests.post(
#         'https://api.skypicker.com/umbrella/v2/graphql',
#         headers=headers,
#         params=params,
#         json=json_data
#     )
#     data = response.json()
#
#     # Append results from the current page
#     all_results.extend(data['data']['onewayItineraries']['itineraries'])
#
#     # Check if more pages exist, this depends on the API's specific response structure
#     has_more = data['data']['onewayItineraries']['metadata']['hasMorePending']
#
#     # Prepare the next request if pagination requires changing some parameters (e.g., offset)
#     page += 1
#     # Modify json_data or params as needed for pagination, if necessary

# Now all_results contain the full list
# print(page)
# print(f"Total itineraries retrieved: {all_results[0]}")


response = requests.post('https://api.skypicker.com/umbrella/v2/graphql', params=params, headers=headers, json=json_data)
all_results_raw = []
flights = []
all_results_raw.extend(response.json()['data']['onewayItineraries']['itineraries'])
for result in all_results_raw:
    first_segment = result['sector']['sectorSegments'][0]['segment']
    flight_info = {'departure_station_code': first_segment['source']['station']['code'],
                   'departure_id': first_segment['source']['station']['id'],
                   'departure_city_name': first_segment['source']['station']['city']['name'],
                   'departure_city_id': first_segment['source']['station']['city']['id'],
                   'departure_name': first_segment['source']['station']['name'],
                   'departure_country_code': first_segment['source']['station']['country']['code'],
                   'departure_country_id': first_segment['source']['station']['country']['id'],
                   'arrival_station_code': first_segment['destination']['station']['code'],
                   'arrival_id': first_segment['destination']['station']['id'],
                   'arrival_city_name': first_segment['destination']['station']['city']['name'],
                   'arrival_city_id': first_segment['destination']['station']['city']['id'],
                   'arrival_name': first_segment['destination']['station']['name'],
                   'arrival_country_code': first_segment['destination']['station']['country']['code'],
                   'arrival_country_id': first_segment['destination']['station']['country']['id'],
                   'airline': first_segment['carrier']['name'],
                   'departure_local_time': first_segment['source']['localTime'],
                   'departure_utc_time': first_segment['source']['utcTime'],
                   'arrival_local_time': first_segment['destination']['localTime'],
                   'arrival_utc_time': first_segment['destination']['utcTime'],
                   'price_usd': result['price']['amount'], 'price_eur': result['priceEur']['amount'],
                   'seats_left': result['lastAvailable']['seatsLeft']}

    if flight_info:
        flights.append(flight_info)

# print(response.text)
print(len(flights))
print(f"{flights[0]}")
